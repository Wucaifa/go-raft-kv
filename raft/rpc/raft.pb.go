// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: raft.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestVoteReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`                                       // 候选者的任期
	CandidateId   int64                  `protobuf:"varint,2,opt,name=candidateId,proto3" json:"candidateId,omitempty"`                         // 候选者的ID
	LastLogIndex  int64                  `protobuf:"varint,3,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"` // 候选者最后一条日志的index
	LastLogTerm   int64                  `protobuf:"varint,4,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`    // 候选者最后一条日志的term
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestVoteReq) Reset() {
	*x = RequestVoteReq{}
	mi := &file_raft_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteReq) ProtoMessage() {}

func (x *RequestVoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteReq.ProtoReflect.Descriptor instead.
func (*RequestVoteReq) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{0}
}

func (x *RequestVoteReq) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteReq) GetCandidateId() int64 {
	if x != nil {
		return x.CandidateId
	}
	return 0
}

func (x *RequestVoteReq) GetLastLogIndex() int64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *RequestVoteReq) GetLastLogTerm() int64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

type RequestVoteResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`                                  // 节点当前的term
	VoteGranted   bool                   `protobuf:"varint,2,opt,name=vote_granted,json=voteGranted,proto3" json:"vote_granted,omitempty"` // 节点投票结果--true/false
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestVoteResp) Reset() {
	*x = RequestVoteResp{}
	mi := &file_raft_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVoteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteResp) ProtoMessage() {}

func (x *RequestVoteResp) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteResp.ProtoReflect.Descriptor instead.
func (*RequestVoteResp) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{1}
}

func (x *RequestVoteResp) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteResp) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

type AppendEntriesReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`                                       // leader当前的term
	LeaderId      int64                  `protobuf:"varint,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`               // leader的ID
	PrevLogIndex  int64                  `protobuf:"varint,3,opt,name=prev_log_index,json=prevLogIndex,proto3" json:"prev_log_index,omitempty"` // leader要追加日志条目的前一条日志index
	PrevLogTerm   int64                  `protobuf:"varint,4,opt,name=prev_log_term,json=prevLogTerm,proto3" json:"prev_log_term,omitempty"`    // leader要追加日志条目的前一条日志term
	Entries       []*LogEntry            `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`                                  // 准备存储的日志条目（可以为空，用于心跳）
	LeaderCommit  int64                  `protobuf:"varint,6,opt,name=leaderCommit,proto3" json:"leaderCommit,omitempty"`                       // leader的已提交日志的index
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendEntriesReq) Reset() {
	*x = AppendEntriesReq{}
	mi := &file_raft_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesReq) ProtoMessage() {}

func (x *AppendEntriesReq) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesReq.ProtoReflect.Descriptor instead.
func (*AppendEntriesReq) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{2}
}

func (x *AppendEntriesReq) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesReq) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *AppendEntriesReq) GetPrevLogIndex() int64 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendEntriesReq) GetPrevLogTerm() int64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendEntriesReq) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppendEntriesReq) GetLeaderCommit() int64 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

type AppendEntriesResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`       // follower当前的term
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"` // follower如果匹配了leader的prev_log_index和prev_log_term -- true
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendEntriesResp) Reset() {
	*x = AppendEntriesResp{}
	mi := &file_raft_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesResp) ProtoMessage() {}

func (x *AppendEntriesResp) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesResp.ProtoReflect.Descriptor instead.
func (*AppendEntriesResp) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{3}
}

func (x *AppendEntriesResp) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"` // 客户端请求的命令（如状态机执行的操作）
	Term          int64                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`      // 日志条目被创建时的任期（term）
	Index         int64                  `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`    // 日志条目的索引（log index）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_raft_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{4}
}

func (x *LogEntry) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *LogEntry) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LogEntry) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type InstallSnapshotReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Term             int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`                         // leader当前的任期（term）
	LeaderId         int64                  `protobuf:"varint,2,opt,name=leaderId,proto3" json:"leaderId,omitempty"`                 // leader的ID
	LastIncludeIndex int64                  `protobuf:"varint,3,opt,name=lastIncludeIndex,proto3" json:"lastIncludeIndex,omitempty"` // 快照中包含的最后一条日志的索引
	LastIncludeTerm  int64                  `protobuf:"varint,4,opt,name=lastIncludeTerm,proto3" json:"lastIncludeTerm,omitempty"`   // 快照中包含的最后一条日志的任期（term）
	Data             []byte                 `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`                          // 快照数据的二进制内容
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InstallSnapshotReq) Reset() {
	*x = InstallSnapshotReq{}
	mi := &file_raft_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSnapshotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotReq) ProtoMessage() {}

func (x *InstallSnapshotReq) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotReq.ProtoReflect.Descriptor instead.
func (*InstallSnapshotReq) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{5}
}

func (x *InstallSnapshotReq) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *InstallSnapshotReq) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *InstallSnapshotReq) GetLastIncludeIndex() int64 {
	if x != nil {
		return x.LastIncludeIndex
	}
	return 0
}

func (x *InstallSnapshotReq) GetLastIncludeTerm() int64 {
	if x != nil {
		return x.LastIncludeTerm
	}
	return 0
}

func (x *InstallSnapshotReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type InstallSnapshotResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"` // follower当前的任期（term）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallSnapshotResp) Reset() {
	*x = InstallSnapshotResp{}
	mi := &file_raft_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSnapshotResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotResp) ProtoMessage() {}

func (x *InstallSnapshotResp) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotResp.ProtoReflect.Descriptor instead.
func (*InstallSnapshotResp) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{6}
}

func (x *InstallSnapshotResp) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

var File_raft_proto protoreflect.FileDescriptor

const file_raft_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"raft.proto\x12\x03rpc\"\x90\x01\n" +
	"\x0eRequestVoteReq\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12 \n" +
	"\vcandidateId\x18\x02 \x01(\x03R\vcandidateId\x12$\n" +
	"\x0elast_log_index\x18\x03 \x01(\x03R\flastLogIndex\x12\"\n" +
	"\rlast_log_term\x18\x04 \x01(\x03R\vlastLogTerm\"H\n" +
	"\x0fRequestVoteResp\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12!\n" +
	"\fvote_granted\x18\x02 \x01(\bR\vvoteGranted\"\xda\x01\n" +
	"\x10AppendEntriesReq\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x1b\n" +
	"\tleader_id\x18\x02 \x01(\x03R\bleaderId\x12$\n" +
	"\x0eprev_log_index\x18\x03 \x01(\x03R\fprevLogIndex\x12\"\n" +
	"\rprev_log_term\x18\x04 \x01(\x03R\vprevLogTerm\x12'\n" +
	"\aentries\x18\x05 \x03(\v2\r.rpc.LogEntryR\aentries\x12\"\n" +
	"\fleaderCommit\x18\x06 \x01(\x03R\fleaderCommit\"A\n" +
	"\x11AppendEntriesResp\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"N\n" +
	"\bLogEntry\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x03R\x04term\x12\x14\n" +
	"\x05index\x18\x03 \x01(\x03R\x05index\"\xae\x01\n" +
	"\x12InstallSnapshotReq\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x1a\n" +
	"\bleaderId\x18\x02 \x01(\x03R\bleaderId\x12*\n" +
	"\x10lastIncludeIndex\x18\x03 \x01(\x03R\x10lastIncludeIndex\x12(\n" +
	"\x0flastIncludeTerm\x18\x04 \x01(\x03R\x0flastIncludeTerm\x12\x12\n" +
	"\x04data\x18\x06 \x01(\fR\x04data\")\n" +
	"\x13InstallSnapshotResp\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term2\xc9\x01\n" +
	"\aRaftRpc\x128\n" +
	"\vRequestVote\x12\x13.rpc.RequestVoteReq\x1a\x14.rpc.RequestVoteResp\x12>\n" +
	"\rAppendEntries\x12\x15.rpc.AppendEntriesReq\x1a\x16.rpc.AppendEntriesResp\x12D\n" +
	"\x0fInstallSnapshot\x12\x17.rpc.InstallSnapshotReq\x1a\x18.rpc.InstallSnapshotRespB\n" +
	"Z\braft/rpcb\x06proto3"

var (
	file_raft_proto_rawDescOnce sync.Once
	file_raft_proto_rawDescData []byte
)

func file_raft_proto_rawDescGZIP() []byte {
	file_raft_proto_rawDescOnce.Do(func() {
		file_raft_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_raft_proto_rawDesc), len(file_raft_proto_rawDesc)))
	})
	return file_raft_proto_rawDescData
}

var file_raft_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_raft_proto_goTypes = []any{
	(*RequestVoteReq)(nil),      // 0: rpc.RequestVoteReq
	(*RequestVoteResp)(nil),     // 1: rpc.RequestVoteResp
	(*AppendEntriesReq)(nil),    // 2: rpc.AppendEntriesReq
	(*AppendEntriesResp)(nil),   // 3: rpc.AppendEntriesResp
	(*LogEntry)(nil),            // 4: rpc.LogEntry
	(*InstallSnapshotReq)(nil),  // 5: rpc.InstallSnapshotReq
	(*InstallSnapshotResp)(nil), // 6: rpc.InstallSnapshotResp
}
var file_raft_proto_depIdxs = []int32{
	4, // 0: rpc.AppendEntriesReq.entries:type_name -> rpc.LogEntry
	0, // 1: rpc.RaftRpc.RequestVote:input_type -> rpc.RequestVoteReq
	2, // 2: rpc.RaftRpc.AppendEntries:input_type -> rpc.AppendEntriesReq
	5, // 3: rpc.RaftRpc.InstallSnapshot:input_type -> rpc.InstallSnapshotReq
	1, // 4: rpc.RaftRpc.RequestVote:output_type -> rpc.RequestVoteResp
	3, // 5: rpc.RaftRpc.AppendEntries:output_type -> rpc.AppendEntriesResp
	6, // 6: rpc.RaftRpc.InstallSnapshot:output_type -> rpc.InstallSnapshotResp
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_raft_proto_init() }
func file_raft_proto_init() {
	if File_raft_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_raft_proto_rawDesc), len(file_raft_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_raft_proto_goTypes,
		DependencyIndexes: file_raft_proto_depIdxs,
		MessageInfos:      file_raft_proto_msgTypes,
	}.Build()
	File_raft_proto = out.File
	file_raft_proto_goTypes = nil
	file_raft_proto_depIdxs = nil
}
